help.start()
getwd
getwd()
ls()
age <- c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4,
10.2, 6.1)
mean(weight)
sd(weight)
cor(age, weight)
plot(age, weight)
# q()
setwd("C:/myprojects/project1")
options()
options(digits=3)
x <- runif(20)
summary(x)
hist(x)
savehistory()
age <- c(1, 3, 5, 2, 11, 9, 3, 9, 12, 3)
weight <- c(4.4, 5.3, 7.2, 5.2, 8.5, 7.3, 6, 10.4,
10.2, 6.1)
mean(weight)
sd(weight)
require("RPostgreSQL")
install.packages(RPostgreSQL)
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
require("RPostgreSQL")
pw <- {"T@lkJ!ve"}
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
df_postgres <- dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
dbGetQuery(con, "select views from bi_new_page_views where object_id = 219152")
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
pw <- {"xxxx"}
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
df_postgres <- dbGetQuery(con, " select views from bi_new_page_views where object_id = 219152")
sd(df_postgres)
table(df_postgres)
sd(df_postgres)
sd(table(df_postgres))
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
dbGetQuery(con, "select views from bi_new_page_views where object_id = 219152")
sd(df_postgres)
Sys.setenv(LANG = "en")
q()
q()
Sys.getenv()
q()
pw <- {" T@lkJ!ve "}
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
df_postgres <- dbGetQuery(con, " select views from bi_new_page_views where object_id = 219152")
install.packages("RPostgreSQL")
con <- dbConnect(drv, dbname = "ecn-analytics",pw <- {"xxxx"}
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
pw <- {"T@lkJ!ve"}
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
require("RPostgreSQL")
pw <- {"T@lkJ!ve"}
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
require("RPostgreSQL")
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
dbGetQuery(con, "SELECT distinct community_id from bi_new_community")
dbGetQuery(con, "select views from bi_new_page_views where object_id = 219152")
q()
require("RPostgreSQL")
drv <- dbDriver("PostgreSQL")
pw <- {"T@lkJ!ve"}
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
dbGetQuery(con, "select views from bi_new_page_views where object_id = 219152")
getpv <- dbGetQuery(con, "select views from bi_new_page_views where object_id = 219152")
sd(getpv)
require("RPostgreSQL")
#Connect to PostgreSQL
drv <- dbDriver("PostgreSQL")
pw <- {"T@lkJ!ve"}as.numeric(fakedata$col1)
con <- dbConnect(drv, dbname = "ecn-analytics",
host = "10.106.112.101", port = 5432,
user = "ecnadmin", password = pw)
#Get document and title
doc <- dbGetQuery(con, "select * from bi_r_text")
#Convert Text
doc$title <- as.character(doc$title)
doc$bodytext <- as.character(doc$bodytext)
Encoding(doc$title) <- "UTF-8"
Encoding(doc$bodytext) <- "UTF-8"
doc$title
install.packages("rmmseg4j")
library("rmmseg4j")
q()
chocolate <- c(2, 4, 1.5, 2, 3)
happniess <- c(7, 3, 8, 8, 6)
chocolate
cor(chocolate,happniess, method="pearson")
0.3*(29/99)*28/98*27/97*26/96*25/95
0.3*(29/99)*28/98*27/97*26/96
4*0.14+5*0.35+6*0.31+7*0.2
0.06+0.27+0.14
1^2*0.03
0.95*0 + 0.03*1 + 0.02*2
(0-0.07)^2*0.95 + (1-0.07)^2*0.03 + (2-0.07)^2*0.02
1.3-2*0.57
1.3*2*0.57
1.3-2*0.57
1.3+2*0.57
(420 - 240)/90
factorial(4)
factorial(4-3)
factorial(3)*0.5^3
factorial(3)*0.5^3/factorial(2)
factorial(3)*0.5^3/factorial(1)
factorial(4)*0.48^3*(1-0.48)/factorial(3)*factorial(4-3)
factorial(5)*0.48^3*(1-0.48)^2/factorial(3)*factorial(5-3)
factorial(5)*0.48^3*(1-0.48)^2/(factorial(3)*factorial(5-3))
factorial(12)*(0.2^8)*(0.8^4)/(factorial(8)*factorial(4))
round((factorial(12)*(0.2^8)*(0.8^4)/(factorial(8)*factorial(4))),3)
round(((0-0.07)^2*0.95 + (1-0.07)^2*0.03 + (2-0.07)^2*0.02),2)
40*0.05
10*0.25/2
10*0.025/2
curve()
curve(7,1)
curve(dnorm(x,mean=7, sd=1)), xlim = c(0, 15)) ,abline(h = 0)
dnorm(x = 90, mean = 7, sd = 1)
dnorm(mean = 7, sd = 1)
dnorm(0, mean = 7, sd = 1)
dnorm(mean = 7, sd = 1)
dnorm(x, mean = 7, sd = 1)
pnorm(0,10,5)
round(pnorm(0,10,5),3)
sqrt(0.2(1-0.2)/400)
sqrt(0.2*(1-0.2)/400)
first_sample <- sample(scandinavia_data,size=100)
3.7+1.96*0.8/sqrt(150)
wdir
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
available.packages()
removing ~/.kde/share/config/rkwardrc
remove ~/.kde/share/config/rkwardrc
#Loading data
setwd("C:/Users/lif8/Documents/GitHub/Titanic/")
train <- read.csv(file='train.csv', stringsAsFactors = F)
test  <- read.csv(file='test.csv', stringsAsFactors = F)
#change survived from intger to boolean
train$Survived <- as.logical(train$Survived)
levels(train$Survived) <- c("Not survived", "Survived")
train$Survived
library(ggplot2)
ggplot(data, aes(x=Age, y=Pclass, color=Survived)) +
geom_jitter(position = position_jitter(height = .1)) +
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("Age, Sex, and Class as Survival Factors") + ylab("Pclass")
for(i in c(3,5,12)) {
data[,i] <- as.factor(data[,i])
}
setwd("C:/Users/lif8/Documents/GitHub/Titanic/")
for(i in c(3,5,12)) {
data[,i] <- as.factor(data[,i])
}
train$FamilySize <- train$SibSp + train$Parch + 1
for(i in c(3,5,12)) {
train[,i] <- as.factor(train[,i])
}
View(train)
print(levels(train))
print(levels(train[,i]))
print(levels(train$Pclass))
print(levels(train$Age))
library(ggplot2)
ggplot(train, aes(x=Age, y=Pclass, color=Survived)) +
geom_jitter(position = position_jitter(height = .1)) +
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("Age, Sex, and Class as Survival Factors") + ylab("Pclass")
library(ggplot2)
ggplot(train, aes(x=Age, y=Pclass, color=Survived)) +
geom_jitter(position = position_jitter(height = .1)) +
scale_color_manual(values=c("red", "blue")) + facet_grid(Sex ~ .) +
ggtitle("Age, Sex, and Class as Survival Factors") + ylab("Pclass")
